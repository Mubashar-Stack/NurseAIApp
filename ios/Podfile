# Resolve react_native_pods.rb with node to allow for hoisting
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

platform :ios, '12.0' # Specify the minimum iOS version explicitly
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

setup_permissions([
  'Microphone',
  'PhotoLibrary',
  'PhotoLibraryAddOnly',
  'Camera',
  'LocationWhenInUse',
  'LocationAlways',
])

target 'NurseProAI' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => true # Ensure Hermes is enabled
  )

  target 'NurseProAITests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )

    # Ensure Hermes dSYM is generated for Hermes.framework
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Check and set the DEBUG_INFORMATION_FORMAT for Hermes dSYM generation
        if target.name == 'hermes-engine' && config.build_settings['DEBUG_INFORMATION_FORMAT'] == 'dwarf'
          config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
        end
      end
    end
  end
end
